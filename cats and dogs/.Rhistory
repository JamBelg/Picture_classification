shiny::runApp('App')
??load_img
library(keras)
ImagePath <- "/Users/jamelbelgacem/Documents/Python/Deep learning/Picture classification/cats and dogs/data/test/dogs/dog_177.jpg"
img <- flow_images_from_directory(ImagePath, target_size = c(224,224))
install.packages("imager")
install.packages("imager")
install.packages("imager")
ImagePath='/Users/jamelbelgacem/Documents/Python/Deep learning/Picture classification/cats and dogs/data/test/dogs/dog_283.jpg'
library(imager)
shiny::runApp('App')
install.packages("imager")
runApp('App')
install.packages("imager", dependencies = FALSE)
library(imager)
install.packages("magrittr", dependencies = FALSE)
library(imager)
install.packages("imager", dependencies = TRUE)
library(imager)
shiny::runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
?renderImage
runApp('App')
library(jpeg)
library(png)
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
is.null(inFile)
inFile
input$ImagePath
input$ImagePath
input$ImagePath
ext
inFile$datapath
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
input$ImagePath
imager::load.image(input$ImagePath$datapath)
runApp('App')
?resize
runApp('App')
img <- imager::resize(img, 224, 224)
runApp('App')
?as.array
?imager
runApp('App')
as.array(img)
runApp('App')
array_reshape(img, c(1,dim(img)))
?application_vgg16
runApp('App')
runApp('App')
runApp('App')
runApp('App')
dim(img)
runApp('App')
runApp('App')
runApp('App')
?application_vgg16
runApp('App')
runApp('App')
runApp('App')
runApp('App')
dim(img)
runApp('App')
dim(img)
dim(img)
?resize
dim(img)
array_reshape(img, c(224,224,3))
array_reshape(img, c(one, 224, 224, 3))
array_reshape(img, c(None, 224, 224, 3))
runApp('App')
reticulate::use_python()
shiny::runApp('App')
reticulate::py_last_error()
shiny::runApp('App')
runApp('App')
?import
runApp('App')
runApp('App')
runApp('App')
reticulate::py_last_error()
runApp('App')
shiny::runApp('App')
reticulate::py_last_error()
runApp('App')
shiny::runApp('App')
runApp('App')
input$ImagePath
runApp('App')
input$ImagePath$datapath
runApp('App')
runApp('App')
renv::activate()
runApp('App')
runApp('App')
runApp('App')
runApp('App')
?source_python
runApp('App')
globalenv()
Sys.getenv()
Sys.getenv('VIRTUALENV_NAME')
use_condaenv('/opt/homebrew/Caskroom/miniforge/base/envs/picture_class_proj1/bin/python3.10')
runApp('App')
reticulate::py_last_error()
Sys.getenv('PYTHON_PATH')
runApp('App')
Sys.getenv('PYTHON_PATH')
Sys.getenv('PYTHON_PATH')
Sys.getenv('PYTHON_PATH')
Sys.getenv()
Sys.getenv()
Sys.getenv('PYTHON_PATH')
Sys.getenv()
Sys.getenv()
Sys.getenv()
library(reticulate)
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
Sys.getenv()
use_python("/usr/local/bin/python3")
py_config()
Sys.getenv()
Sys.getenv('PYTHON_PATH')
Sys.getenv('PYTHON_PATH')
Sys.getenv()
Sys.getenv()
Sys.getenv('PYTHON_PATH')
library(reticulate)
py_config()
shiny::runApp('App')
install.packages("imager")
runApp('App')
runApp('App')
runApp('App')
